name: Client

on:
  workflow_dispatch:

  push:
    branches: [ "master" ]

env:
  NETCORE_VERSION: "8.0.x"
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build-and-push:
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup dotnet 🏢
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.NETCORE_VERSION }}

      - name: Setup wasm-tools ✂️
        run: dotnet workload install wasm-tools

      - name: Load cache 🔃
        id: nuget-cache
        uses: actions/cache@v4
        with:
          path: "~/.nuget/packages"
          key: "${{ runner.os }}-nuget-client-${{ hashFiles('**/*.csproj') }}"
          restore-keys: "${{ runner.os }}-nuget-client-"

      - name: Cache status ✅
        run: |
          echo "Cache hit: ${{ steps.nuget-cache.outputs.cache-hit }}"

      - name: Restore packages 📦
        run: dotnet restore --verbosity minimal

#      TODO replace with NPM, because of daisyUI

      - name: Setup Tailwind 🎨
        run: |
          wget https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64 -O /usr/local/bin/tailwindcss
          chmod +x /usr/local/bin/tailwindcss

      - name: Compile Tailwind classes 🎨
        run: |
          cd ./src/Client
          tailwindcss --input ./wwwroot/css/app.css --output ./wwwroot/css/app.min.css --minify

      - name: Publish 📦
        run: |
          dotnet publish --no-restore src/Client --configuration Release --output dist

      - name: Copy dist content to server 🔁
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "./dist/wwwroot/*"
          target: "~/dist/"
          rm: true
          overwrite: true
          strip_components: 2
