@using QuickForm.Components

@inherits QuickForm<TEntity>
@typeparam TEntity where TEntity : class, new()

@{
    // Additional attributes, in this case, it is the class to be applied to the form.
    AdditionalAttributes ??= new Dictionary<string, object>();
    AdditionalAttributes.Add("class", "flex flex-col");

    // Field layout
    ChildContent = context =>
        @<div class="flex flex-col">
            <label for="@context.EditorId">
                @context.DisplayName
            </label>

            @context.InputComponent("peer")

            <span class="text-gray-500">
                @context.Description
            </span>

            <span class="hidden peer-[.valid]:block text-green-700">
                @context.ValidFeedback
            </span>

            @context.ValidationMessages("hidden peer-[.invalid]:block text-red-700")
        </div>;

    // Submit button layout
    SubmitButtonTemplate =
        @<button type="submit" class="border border-green-500 text-green-500">
            submit
        </button>;
}

@{
    base.BuildRenderTree(__builder);
}