<button
    data-state="@(CurrentValue == Value ? "active" : "")"
    @onclick="@(() => ChangeValue(Value))"
    class="@(Tw.Merge("ring-offset-background focus-visible:ring-ring data-[state=active]:bg-background data-[state=active]:text-foreground inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm", Class))">
    @ChildContent
</button>

@code {
    [CascadingParameter(Name = nameof(Tabs.Value))]
    public string CurrentValue { get; set; } = null!;

    [CascadingParameter(Name = nameof(Tabs.ChangeValue))]
    public Action<string> ChangeValue { get; set; } = null!;

    [Parameter, EditorRequired]
    public string Value { get; set; } = null!;

    [Parameter]
    public string Class { get; set; } = null!;

    [Parameter]
    public RenderFragment ChildContent { get; set; } = null!;

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> AdditionalAttributes { get; set; } = [];
}