@using Presentation.Components.Ui.Card
@using Presentation.Components.Ui.Form

<Card>
    <Header>
        <Title>Payment Method</Title>
        <Description>Add a new payment method to your account.</Description>
    </Header>
    <Content class="grid gap-6">
        <div value="card" class="grid grid-cols-3 gap-4">
            <FormLabel @onclick="@(() => SelectedMethod = 0)"
                    Class="@(Tw.Merge(SelectedMethod == 0 ? "border-primary" : "border-muted", "bg-popover hover:bg-accent hover:text-accent-foreground flex flex-col items-center justify-between rounded-md border-2 p-4"))">
                <Blazicon Svg="Icons.CreditCard" class="mb-3 size-6" />
                Card
            </FormLabel>

            <FormLabel @onclick="@(() => SelectedMethod = 1)"
                    Class="@(Tw.Merge(SelectedMethod == 1 ? "border-primary" : "border-muted", "bg-popover hover:bg-accent hover:text-accent-foreground flex flex-col items-center justify-between rounded-md border-2 p-4"))">
                <Blazicon Svg="Icons.CreditCard" class="mb-3 size-6" />
                Paypal
            </FormLabel>

            <FormLabel @onclick="@(() => SelectedMethod = 2)"
                    Class="@(Tw.Merge(SelectedMethod == 2 ? "border-primary" : "border-muted", "bg-popover hover:bg-accent hover:text-accent-foreground flex flex-col items-center justify-between rounded-md border-2 p-4"))">
                <Blazicon Svg="Icons.CreditCard" class="mb-3 size-6" />
                Apple
            </FormLabel>
        </div>

        <div class="grid gap-2">
            <FormLabel for="name">Name</FormLabel>
            <input class="@FormInputText.BaseClass" id="name" placeholder="First Last" />
        </div>

        <div class="grid gap-2">
            <FormLabel for="number">Card number</FormLabel>
            <input class="@FormInputText.BaseClass" id="number" placeholder="" />
        </div>

        <div class="grid grid-cols-3 gap-4">
            <div class="grid gap-2">
                <FormLabel for="month">Expires</FormLabel>
                <select id="month" class="@(Button.GetButtonClass(Tw, "outline", @class: "outline-none appearance-none"))">
                    <option value="0">January</option>
                    <option value="1">February</option>
                    <option value="2">March</option>
                    <option value="3">April</option>
                    <option value="4">May</option>
                    <option value="5">June</option>
                    <option value="6">July</option>
                    <option value="7">August</option>
                    <option value="8">September</option>
                    <option value="9">October</option>
                    <option value="10">November</option>
                    <option value="11">December</option>
                </select>
            </div>
            <div class="grid gap-2">
                <FormLabel for="year">Year</FormLabel>
                <select id="year" class="@(Button.GetButtonClass(Tw, "outline", @class: "outline-none appearance-none"))">
                    @for (var i = DateTime.UtcNow.Year; i < DateTime.UtcNow.Year + 10; i++)
                    {
                        <option @key="@i" value="@i">@i</option>
                    }
                </select>
            </div>
            <div class="grid gap-2">
                <FormLabel for="cvc">CVC</FormLabel>
                <input class="@FormInputText.BaseClass" id="cvc" placeholder="CVC" />
            </div>
        </div>
    </Content>
    <Footer>
        <Button Class="w-full">Continue</Button>
    </Footer>
</Card>

@code {
    private int SelectedMethod { get; set; } = 0;
}
