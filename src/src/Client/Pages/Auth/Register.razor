@using Application.Cqrs.Users.Commands
@using Blazored.Toast.Services
@using Client.Components.Ui.Form
@using Client.Services

@page "/register"
@layout AuthLayout
@attribute [AllowAnonymous]
@inject ApiService Api
@inject NavigationManager Nav
@inject IToastService Toast

<AuthorizeView>
    <Redirect To="/" />
</AuthorizeView>

<div class="flex flex-col space-y-2 text-start">
    <h1 class="text-2xl font-semibold tracking-tight">
        Create an account
    </h1>
</div>

<div class="grid gap-6">
    <AppForm @bind-Model="Command" OnValidSubmit="OnValidSubmit" novalidate class="grid gap-4">
        <FormField>
            <FormLabel for="email">Email</FormLabel>
            <FormInputText id="email"
                           @bind-Value="@Command.Email"
                           placeholder="name@example.com"
                           type="email"
                           required
                           autocomplete="email"
                           disabled="@IsLoading" />

            <FormInvalidFeedback For="@(() => Command.Email)" />
        </FormField>

        <FormField>
            <FormLabel for="fullname">Full name</FormLabel>
            <FormInputText id="fullname"
                           @bind-Value="@Command.FullName"
                           placeholder="ddjerqq"
                           type="text"
                           required
                           autocomplete="username"
                           disabled="@IsLoading" />

            <FormInvalidFeedback For="@(() => Command.FullName)" />
        </FormField>


        <FormField>
            <FormLabel for="password">Password</FormLabel>
            <FormInputText id="password"
                           @bind-Value="@Command.Password"
                           placeholder="Enter password"
                           type="password"
                           required
                           autocomplete="password"
                           disabled="@IsLoading" />

            <FormInvalidFeedback For="@(() => Command.Password)" />
        </FormField>

        <Button type="submit" disabled="@IsLoading">
            @if (IsLoading)
            {
                <Blazicon Svg="Loader" class="mr-2 h-4 w-4 animate-spin" />
            }
            Register
        </Button>

        <Button Href="/login" Variant="outline" disabled="@IsLoading">
            @if (IsLoading)
            {
                <Blazicon Svg="Loader" class="mr-2 h-4 w-4 animate-spin" />
            }
            Login
        </Button>
    </AppForm>
</div>

@code {
    private bool IsLoading { get; set; }

    private RegisterCommand Command { get; set; } = new();

    private async Task OnValidSubmit()
    {
        IsLoading = true;
        var user = await Api.PostRegister(Command);

        if (user is not null)
        {
            Toast.ShowSuccess($"Welcome {user.FullName}");
            Nav.NavigateTo("/", true);
        }

        IsLoading = false;
    }
}
